#!/usr/bin/env ruby -w

require_relative 'lib/dice'
require_relative 'lib/display'
require_relative 'lib/sounds'
require_relative 'lib/say'

unless ARGV[0]
  puts("Usage: './game start x' where 'x' is the number of dice to be rolled")
  exit(0)
end

include Say

def play_sound(sound)
  system("afplay #{sound}")
end

def special_rolls(rolls)
  result = rolls.uniq.size == 1 ? rolls.first : nil

  case result
  when nil then nil
  when 1 then say_snake_eyes
  when 6 then say_double_sixes
  else say_check_my_dubs
  end
end

def maybe_drink!
  x = rand(50)
  if x == 0
    play_sound(Sounds::TAKE_SHOT)
    puts(Display::TAKE_SHOT)
    say_take_a_shot
  elsif x == 49
    play_sound(Sounds::POUND_BEER)
    puts(Display::POUND_BEER)
    say_pound_your_beer
  end
end

number_of_rolls = ARGV[1] ? ARGV[1].to_i : 2
raise 'Type a fucking number, moron' if number_of_rolls == 0

system('clear')
dice = Dice.new(1)
puts("Welcome to DICE ROLL!\n\n")
puts('Press enter to roll the dice!')
STDIN.gets

if ARGV[0] == 'start'
  loop do
    system('clear')
    play_sound(Sounds::DICE_ROLL)

    maybe_drink!

    rolls = []
    number_of_rolls.times { rolls << dice.roll }

    rolls.each { |r| puts(Display::HASH[r]) }

    puts("Total score: #{ rolls.inject(&:+) }")

    special_rolls(rolls) if number_of_rolls == 2

    puts('Press enter to roll the dice!')
    STDIN.gets
  end
end

